import streamlit as st
import pandas as pd
import plotly.express as px
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder

st.title("Titanic App ü§ñ")
# Ti·ªÅn x·ª≠ l√Ω d·ªØ li·ªáu
with st.expander("Data Preprocessing") : 

# ƒê·ªçc d·ªØ li·ªáu
    df = pd.read_csv("titanic.csv")
st.write(f"**K√≠ch th∆∞·ªõc d·ªØ li·ªáu :** {df.shape}")

# Ki·ªÉm tra gi√° tr·ªã thi·∫øu
    missing_values_before = df.isnull().sum()
    st.write("**Gi√° tr·ªã thi·∫øu tr∆∞·ªõc x·ª≠ l√Ω:**")
    st.write(missing_values_before.to_frame().T)

# X·ª≠ l√Ω d·ªØ li·ªáu thi·∫øu
    df["Age"].fillna(df["Age"].mean(), inplace=True)
    df["Cabin"].fillna("Unknown", inplace=True)
    df["Embarked"].fillna(df["Embarked"].mode()[0], inplace=True)
# Ki·ªÉm tra gi√° tr·ªã thi·∫øu sau x·ª≠ l√Ω
    missing_values_after = df.isnull().sum()
    st.write("**Gi√° tr·ªã thi·∫øu sau x·ª≠ l√Ω:**")
    st.write(missing_values_after.to_frame().T)

# Ki·ªÉm tra v√† x·ª≠ l√Ω d·ªØ li·ªáu tr√πng l·∫∑p
    duplicates_before = df.duplicated().sum()
    st.write(f"**S·ªë b·∫£n ghi tr√πng tr∆∞·ªõc khi x·ª≠ l√Ω:** {duplicates_before}")
    df.drop_duplicates(inplace=True)
    duplicates_after = df.duplicated().sum()
    st.write(f"**S·ªë b·∫£n ghi tr√πng sau khi x·ª≠ l√Ω:** {duplicates_after}")

# Chuy·ªÉn ƒë·ªïi bi·∫øn ph√¢n lo·∫°i th√†nh s·ªë
    label_enc = LabelEncoder()
    categorical_cols = df.select_dtypes(include=["object"]).columns
    for col in categorical_cols:
        df[col] = label_enc.fit_transform(df[col])

    st.write("**D·ªØ li·ªáu sau khi x·ª≠ l√Ω:**")
    st.write(df.head())

with st.expander("Data Visualization") :
# ƒê·ªçc d·ªØ li·ªáu k√≠ch th∆∞·ªõc t·∫≠p d·ªØ li·ªáu
    split_info = {
        "Train": len(pd.read_csv("train.csv")),
        "Validation": len(pd.read_csv("valid.csv")),
        "Test": len(pd.read_csv("test.csv"))
    }

    # Chuy·ªÉn ƒë·ªïi th√†nh DataFrame ƒë·ªÉ tr·ª±c quan h√≥a
    df_split = pd.DataFrame(list(split_info.items()), columns=["Dataset", "Size"])

    # Giao di·ªán Streamlit
    st.write("**S·ªë l∆∞·ª£ng m·∫´u trong m·ªói b·ªô d·ªØ li·ªáu:**")
    st.table(df_split)

    # V·∫Ω bi·ªÉu ƒë·ªì
    fig = px.bar(df_split, x="Dataset", y="Size", title="T·ªïng quan v·ªÅ d·ªØ li·ªáu ", color="Dataset")
    st.plotly_chart(fig)

    # Hi·ªÉn th·ªã ma tr·∫≠n t∆∞∆°ng quan
    df_train = pd.read_csv("train.csv")
    corr_matrix = df_train.corr(numeric_only=True)
    fig_corr = px.imshow(corr_matrix, text_auto=True, title="Ma tr·∫≠n t∆∞∆°ng quan ")
    st.plotly_chart(fig_corr)
    # Hi·ªÉn th·ªã k·∫øt qu·∫£ hu·∫•n luy·ªán m√¥ h√¨nh
    with open("model_results.txt", "r") as f:
        model_results = f.read()
    st.write("**Model Training Results:**")
    st.text(model_results)

